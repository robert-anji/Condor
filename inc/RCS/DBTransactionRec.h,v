head	1.4;
access;
symbols
	C1_80:1.2
	C1_70:1.1;
locks; strict;
comment	@ * @;


1.4
date	2010.09.13.23.15.19;	author ranji;	state Exp;
branches;
next	1.3;

1.3
date	2009.07.19.15.59.11;	author ranji;	state Exp;
branches;
next	1.2;

1.2
date	2007.07.14.13.02.12;	author ranji;	state Exp;
branches;
next	1.1;

1.1
date	2007.06.17.23.29.53;	author Roberto;	state Exp;
branches;
next	;


desc
@1. Derived transaction class that needs a Table and Record handle.
@


1.4
log
@1. Made destructor virtual (to fix memory leak).
@
text
@// $RCSfile: DBTransactionRec.h,v $
// $Revision: 1.3 $

#ifndef DBTransactionRecClass
#define DBTransactionRecClass

#include "Database.h"
#include "DBTransaction.h"

class Record;
class Table;
class View;

class DBTransactionRec : public DBTransaction
{
  friend class Database;

public:
  DBTransactionRec(eDBTransactionOperation tran_oper, View *view, Record *rec);
  virtual ~DBTransactionRec();

private:
  Record    *mpRecord;
  View      *mpView;
};

#endif

// End
@


1.3
log
@1. Fixed member prefix (ie added 'mp' and 'm').
@
text
@d2 1
a2 1
// $Revision: 1.2 $
a15 1
public:
d18 1
d20 1
a20 1
  ~DBTransactionRec();
@


1.2
log
@1. Constructor needs View instead of Table, changed.
@
text
@d2 1
a2 1
// $Revision: 1.1 $
d23 2
a24 2
  Record    *mRecord;
  View      *mView;
@


1.1
log
@Initial revision
@
text
@d1 2
a2 2
// $RCSfile$
// $Revision$
d12 1
d19 1
a19 1
  DBTransactionRec(eDBTransactionOperation tran_oper, Table* tbl, Record *rec);
d24 1
a24 1
  Table     *mTable;
@
