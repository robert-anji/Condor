head	1.3;
access;
symbols;
locks
	robert:1.3; strict;
comment	@ * @;


1.3
date	2011.12.07.16.47.20;	author robert;	state Exp;
branches;
next	1.2;

1.2
date	2010.09.02.22.36.31;	author ranji;	state Exp;
branches;
next	1.1;

1.1
date	2009.07.19.01.34.27;	author ranji;	state Exp;
branches;
next	;


desc
@@


1.3
log
@1. Notify() is now called Set().
2. A process now waits for an event with blocking using Wait(process).
3. A process can now receive an an event without blocking using Notify(process).
4. Needed to make Scheduler a friend of Event.
@
text
@// $RCSfile: Event.h,v $
// $Revision: 1.2 $

#ifndef EventClass
#define EventClass

#include "String.h"
#include "List.h"

class Process;

class Event
{
friend class Scheduler;

public:
  Event(const char* name);
 ~Event();

  bool Set();
  void Wait  (Process* p);
  bool Notify(Process* p);

  // Access functions:
  const char* Name() const { return (const char*)mName; }

private:
  String        mName;
  List<Process> mProcessedWaitingForEventList;
};

#endif

// End
@


1.2
log
@Renamed include file MyString.h to String.h .
@
text
@d2 1
a2 1
// $Revision: 1.1 $
d14 2
d20 3
a22 2
  short Notify();
  void  Wait(Process* process);
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
// $RCSfile: Event $
d7 1
a7 1
#include "MyString.h"
d16 1
a16 1
  ~Event();
d21 1
a21 1
  // Other:
@
